<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sam的博客</title>
  
  <subtitle>用代码书写山河的壮丽</subtitle>
  <link href="https://blog.jyf.icu/atom.xml" rel="self"/>
  
  <link href="https://blog.jyf.icu/"/>
  <updated>2024-02-18T10:25:53.000Z</updated>
  <id>https://blog.jyf.icu/</id>
  
  <author>
    <name>Sam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://blog.jyf.icu/2024/02/18/test/"/>
    <id>https://blog.jyf.icu/2024/02/18/test/</id>
    <published>2024-02-18T10:25:37.555Z</published>
    <updated>2024-02-18T10:25:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>监控程序测试文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;监控程序测试文件&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.jyf.icu/2024/02/04/hello-world/"/>
    <id>https://blog.jyf.icu/2024/02/04/hello-world/</id>
    <published>2024-02-04T08:26:54.791Z</published>
    <updated>2024-02-04T08:26:54.791Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Openai测评</title>
    <link href="https://blog.jyf.icu/2024/01/27/openai%E6%B5%8B%E8%AF%84/"/>
    <id>https://blog.jyf.icu/2024/01/27/openai%E6%B5%8B%E8%AF%84/</id>
    <published>2024-01-26T16:00:00.000Z</published>
    <updated>2024-01-28T05:26:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote><p>作为2023年的爆炸性事件，Openai这家公司可以说是改变了世界。虽然网络上已经有很多对他们的模型进行了试用和测评的文章，但是经过博主的深度尝试，为大家带来这篇测评</p></blockquote><h1 id="注意事项-Notice"><a href="#注意事项-Notice" class="headerlink" title="注意事项 &#x2F; Notice"></a>注意事项 &#x2F; Notice</h1><p>Openai公司是不对中国（除台湾）提供服务的。</p><blockquote><p><del>但是估计能看到这个的人都是有能力用到的</del></p></blockquote><p>本文使用了大量来自GPT的回答作为Example，可能略显冗长，介意的朋友可以前往B站或其他平台寻找测评。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="文本生成"><a href="#文本生成" class="headerlink" title="文本生成"></a>文本生成</h2><h3 id="英语能力"><a href="#英语能力" class="headerlink" title="英语能力"></a>英语能力</h3><p>作为一个英语国家的公司，他的英语文本生成能力毋庸置疑，不管是3.5还是4都具有很好的表现力<br>以下是一个高中作文题作为示例，各位可以看看：<br>question：</p><blockquote><p>假定你是李华。你校英文报就”你是否赞成将业余时间用于参加非学科类校外培训（non-academic extracurricular training)”的话题向全校学生征稿。请你用英文写一篇文章投稿，内容包括：1．你的观点：2．简要说明理由。</p></blockquote><p>CHAT-GPT 3.5：</p><blockquote><p><strong>Should You Spend Your Spare Time on Non-Academic Extracurricular Training?</strong><br>As a student, I firmly believe that engaging in non-academic extracurricular training during spare time is beneficial for personal growth and development. There are several reasons why I hold this viewpoint.<br>Firstly, such activities offer opportunities to explore and develop interests beyond the confines of the traditional academic curriculum. While academic studies are undoubtedly important, they often focus on specific subjects and may not cater to individual interests or talents. Non-academic extracurricular training, on the other hand, allows students to pursue diverse passions such as sports, arts, music, or vocational skills. This not only enriches their overall learning experience but also helps them discover their strengths and talents.<br>Secondly, participating in non-academic extracurricular activities fosters holistic development by nurturing various skills and qualities essential for success in life. Whether it’s teamwork, leadership, time management, or creativity, these activities provide a platform for students to hone a wide range of soft skills that are invaluable in both personal and professional spheres. Moreover, involvement in such training can instill qualities like discipline, perseverance, and resilience, which are crucial for overcoming challenges and achieving goals in any field.<br>Furthermore, engaging in non-academic extracurricular training promotes a healthy work-life balance. While academic pursuits are undoubtedly important, excessive focus on studies alone can lead to burnout and hinder overall well-being. Participating in activities outside the academic realm provides students with a much-needed break from their routine studies, allowing them to recharge and rejuvenate their minds. This balance not only enhances academic performance but also contributes to overall happiness and satisfaction.<br>In conclusion, I believe that dedicating spare time to non-academic extracurricular training is highly beneficial for students. It not only broadens their horizons and cultivates diverse skills but also promotes a balanced and fulfilling lifestyle. Therefore, I encourage my fellow students to seize the opportunities offered by such activities and make the most of their spare time for personal growth and development.<br>Sincerely,<br>Li Hua</p></blockquote><p>可以看到他非常优雅的使用了总分总的结构，并且使用了大量的高级但属于正常范畴的词汇。 <del>这很议论文</del></p><h3 id="中文能力"><a href="#中文能力" class="headerlink" title="中文能力"></a>中文能力</h3><p>但是对于中文能力，GPT就有点回天乏术了，同样我们使用一篇高中作文作为示例</p><blockquote><p>《现代汉语词典》：榜样是作为仿效的人或事例（多指好的）。<br>在生活中，有人认为榜样的价值就在于可以复制，也有人对此说法不以为然。<br>对此争议，你怎么看？请写一篇议论文，谈谈你的思考。字数800字</p></blockquote><p>GPT-3.5</p><blockquote><p><strong>榜样的重要性与争议</strong><br>榜样，作为一种社会文化现象，在塑造个体行为和价值观方面起着重要作用。《现代汉语词典》将其定义为作为仿效的人或事例，尤其是好的榜样。然而，在现实生活中，对榜样的价值和作用存在着争议。一些人认为榜样的意义在于可以复制，而另一些人则持不同意见。本文将探讨榜样的重要性及其争议，以及我个人的看法。<br>首先，让我们探讨榜样的积极价值。榜样可以激励人们向更高的目标努力。当一个人看到身边的榜样取得成功，展现出良好的品德和行为，他们会受到启发，产生对自身能力和潜力的信心，从而激发内在动力，追求自己的目标。此外，榜样还可以为人们树立正确的道德观念和行为准则。通过观察他人的行为，学习他们的优点和成功经验，人们可以提升自己的道德素养，形成正确的行为模式，使社会更加和谐。<br>然而，榜样的复制并非总是积极的。一些人可能过度模仿榜样，失去了自己的个性和创造力。他们可能盲目地模仿他人，而不是根据自己的情况和能力制定适合自己的目标和计划。此外，榜样并非都是完美的，他们也会犯错和犯错。如果盲目模仿榜样，可能会重复他们的错误，造成不良后果。因此，盲目模仿榜样并不总是一个好主意。<br>对于榜样的争议，我认为关键在于如何正确地对待和利用榜样。首先，我们应该明确榜样的作用，将其作为一种借鉴和启发的资源，而不是盲目模仿。我们应该学会从榜样的成功经验中汲取经验教训，根据自己的情况和能力制定适合自己的发展路径。其次，我们应该理性地对待榜样，不将其神化或过分理想化。我们应该意识到榜样也是普通人，他们也有自己的局限性和缺点。因此，我们应该学会从榜样的优点和成功经验中学习，同时也要理性地对待他们的缺点和错误。<br>综上所述，榜样在塑造个体行为和价值观方面具有重要作用，但其作用和价值存在争议。正确地对待和利用榜样，可以为个体的成长和发展提供有益的借鉴和启发。因此，我们应该理性地对待榜样，不盲目模仿，同时也不过分理想化，以实现个体的自我发展和社会的和谐稳定。</p></blockquote><p>GPT-4</p><blockquote><p>榜样的价值：借鉴与超越<br>榜样，作为一种仿效的人或事例，一直以来都备受争议。有人认为榜样的价值在于可以复制，而另一些人则对此说法不以为然。然而，我认为榜样的真正价值在于可以供他人借鉴并超越。在生活中，榜样的存在可以激发人们的积极向上的动力，帮助我们树立正确的价值观和行为准则，发现自己的潜力和可能性，促进社会的进步和发展。<br>榜样可以激发人们的积极向上的动力。当我们看到别人取得了成功，我们会被他们的努力和成就所鼓舞。例如，历史上的杰出人物马克思，他的思想和理论对世界产生了深远的影响。通过模仿榜样的行为和思维方式，我们可以学习到他们的成功经验，并将其应用到自己的生活中。这样，我们可以更加努力地追求自己的目标。<br>榜样可以帮助我们树立正确的价值观和行为准则。优秀的榜样往往具备良好的品德和道德观念。例如，历史上的圣雄甘地，他以非暴力和和平抵抗的方式领导印度独立运动，成为全世界的榜样。通过学习他们的行为和价值观，我们可以更好地认识到什么是正确的，什么是值得追求的。这种学习不仅可以指导我们的行为，还可以塑造我们的人格，使我们成为更好的人。<br>榜样还可以帮助我们发现自己的潜力和可能性。当我们看到别人取得了成功，我们会意识到自己也有可能达到同样的成就。例如，历史上的爱因斯坦，他的理论革命了物理学的发展，成为科学界的榜样。榜样的存在让我们相信，只要我们付出努力，我们也可以取得成功。这种信念可以激发我们的自信心，让我们敢于追求自己的梦想，并发掘自己的潜力。<br>榜样的存在可以促进社会的进步和发展。当一个人成为榜样，他的成功不仅仅是个人的成就，还可以影响和激励更多的人。例如，历史上的罗斯福总统，他的领导力和改革精神推动了美国的经济复苏和社会进步。这种影响力可以传递给更多的人，形成良好的社会风气和价值观。通过榜样的力量，社会可以不断进步，人们可以共同追求更高的目标。<br>综上所述，榜样的价值在于可以供他人借鉴并超越。榜样可以激发人们的积极向上的动力，帮助我们树立正确的价值观和行为准则，发现自己的潜力和可能性，促进社会的进步和发展。因此，我们应该积极地寻找和学习榜样，并将他们的经验和智慧应用到自己的生活中。这样，我们才能不断进步，成为更好的自己。</p></blockquote><p>我们可以看到作为Openai公司的最牛模型，GPT-4的文章明显优于3.5，他使用了真实世界中的例子，而不仅仅是干巴巴的说话。但是俩个模型都存在一定的问题。尽管他们都使用了标准的总分总结构来写这篇议论文，但是他们的论述都不太与生活沾边，而且意义升华的太快没有合格的铺垫，基本为：个人-社会。这样子的跳跃太快并不符合议论文所需。<br><del>不过拿来水水寒假暑假作业的GPT-4还是够用了</del></p><h2 id="代码能力"><a href="#代码能力" class="headerlink" title="代码能力"></a>代码能力</h2><h3 id="代码生成能力"><a href="#代码生成能力" class="headerlink" title="代码生成能力"></a>代码生成能力</h3><p>作为引爆互联网的时代顶流，他的代码生成能力非常不错。常用语言基本上他都能非常好的给出代码，尽管有时候代码不能运行，但是你把报错丢给他，他都能非常好的修复<br>以下是一些语言的范例（模型均为3.5）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> markdown2</span><br><span class="line"><span class="keyword">import</span> emoji</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 socket 对象</span></span><br><span class="line">server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定 IP 和端口</span></span><br><span class="line">server_socket.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">5555</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听连接</span></span><br><span class="line">server_socket.listen()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储连接的客户端和对应的地址</span></span><br><span class="line">clients = &#123;&#125;</span><br><span class="line">addresses = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送消息给指定客户端</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_to_client</span>(<span class="params">message, client_socket</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        client_socket.send(message)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 广播消息给所有客户端</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">broadcast</span>(<span class="params">message, client_socket=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">for</span> client <span class="keyword">in</span> clients:</span><br><span class="line">        <span class="keyword">if</span> client != client_socket:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                client.send(message)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                remove_client(client)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除断开连接的客户端</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">remove_client</span>(<span class="params">client_socket</span>):</span><br><span class="line">    addr = clients[client_socket]</span><br><span class="line">    <span class="keyword">del</span> clients[client_socket]</span><br><span class="line">    <span class="keyword">del</span> addresses[<span class="built_in">str</span>(addr)]</span><br><span class="line">    broadcast(<span class="string">f&quot;Client <span class="subst">&#123;addr&#125;</span> has left the chat.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理客户端的消息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_client</span>(<span class="params">client_socket, addr</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            message = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> message:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            decoded_message = base64.b64decode(message).decode()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 判断消息类型并处理</span></span><br><span class="line">            <span class="keyword">if</span> decoded_message.startswith(<span class="string">&quot;/p2p &quot;</span>):</span><br><span class="line">                target_addr, message_content = decoded_message[<span class="built_in">len</span>(<span class="string">&quot;/p2p &quot;</span>):].split(<span class="string">&quot;: &quot;</span>, <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> target_addr <span class="keyword">in</span> addresses:</span><br><span class="line">                    target_socket = addresses[target_addr]</span><br><span class="line">                    send_to_client(message, target_socket)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    client_socket.send(<span class="string">f&quot;Client <span class="subst">&#123;target_addr&#125;</span> not found.&quot;</span>.encode())</span><br><span class="line">            <span class="keyword">elif</span> decoded_message.startswith(<span class="string">&quot;/broadcast &quot;</span>):</span><br><span class="line">                broadcast_message_content = decoded_message[<span class="built_in">len</span>(<span class="string">&quot;/broadcast &quot;</span>):]</span><br><span class="line">                broadcast_message = <span class="string">f&quot;Broadcast from <span class="subst">&#123;addr&#125;</span>: <span class="subst">&#123;broadcast_message_content&#125;</span>&quot;</span></span><br><span class="line">                broadcast(base64.b64encode(broadcast_message.encode()), client_socket)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                broadcast_message = <span class="string">f&quot;<span class="subst">&#123;addr&#125;</span>: <span class="subst">&#123;emoji.emojize(markdown2.markdown(decoded_message))&#125;</span>&quot;</span>  <span class="comment"># 使用emoji库</span></span><br><span class="line">                broadcast(base64.b64encode(broadcast_message.encode()), client_socket)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            remove_client(client_socket)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 接受客户端连接</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client_socket, addr = server_socket.accept()</span><br><span class="line">    clients[client_socket] = addr</span><br><span class="line">    addresses[<span class="built_in">str</span>(addr)] = client_socket</span><br><span class="line">    broadcast(<span class="string">f&quot;Client <span class="subst">&#123;addr&#125;</span> has joined the chat.&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Connection from <span class="subst">&#123;addr&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动一个新线程来处理客户端</span></span><br><span class="line">    client_thread = threading.Thread(target=handle_client, args=(client_socket, addr))</span><br><span class="line">    client_thread.start()</span><br></pre></td></tr></table></figure><p>这是一个聊天软件的服务器的实现，我已经将这个软件的全部代码上传到了<a href="https://github.com/sam13142023/simpchat">GitHub仓库</a>，感兴趣的朋友可以去看看。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Chunk Upload<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fileInput&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;uploadFile()&quot;</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">uploadFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> fileInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;fileInput&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> file = fileInput.<span class="property">files</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> chunkSize = <span class="number">1024</span> * <span class="number">1024</span>; <span class="comment">// 1MB chunk size</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> totalChunks = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(file.<span class="property">size</span> / chunkSize);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> currentChunk = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> <span class="title function_">uploadChunk</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> start = currentChunk * chunkSize;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> end = <span class="title class_">Math</span>.<span class="title function_">min</span>(start + chunkSize, file.<span class="property">size</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> chunk = file.<span class="title function_">slice</span>(start, end);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span><br><span class="line"><span class="language-javascript">                formData.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, chunk);</span></span><br><span class="line"><span class="language-javascript">                formData.<span class="title function_">append</span>(<span class="string">&#x27;chunk&#x27;</span>, currentChunk);</span></span><br><span class="line"><span class="language-javascript">                formData.<span class="title function_">append</span>(<span class="string">&#x27;totalChunks&#x27;</span>, totalChunks);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">fetch</span>(<span class="string">&#x27;upload.php&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">body</span>: formData</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    currentChunk++;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (currentChunk &lt; totalChunks) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">uploadChunk</span>();</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;File upload complete&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">uploadChunk</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$targetDir</span> = <span class="string">&#x27;uploads/&#x27;</span>;</span><br><span class="line"><span class="variable">$fileName</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$chunkNumber</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;chunk&#x27;</span>];</span><br><span class="line"><span class="variable">$totalChunks</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;totalChunks&#x27;</span>];</span><br><span class="line"><span class="variable">$chunkSize</span> = <span class="number">1024</span> * <span class="number">1024</span>; <span class="comment">// 1MB chunk size</span></span><br><span class="line"><span class="variable">$targetFile</span> = <span class="variable">$targetDir</span> . <span class="variable">$fileName</span> . <span class="string">&#x27;.part&#x27;</span> . <span class="variable">$chunkNumber</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$targetFile</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$chunkNumber</span> == <span class="variable">$totalChunks</span> - <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// All chunks uploaded, merge them</span></span><br><span class="line">    <span class="variable">$outputFile</span> = <span class="variable">$targetDir</span> . <span class="variable">$fileName</span>;</span><br><span class="line">    <span class="variable">$outputStream</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$outputFile</span>, <span class="string">&#x27;wb&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$totalChunks</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$inputFile</span> = <span class="variable">$targetDir</span> . <span class="variable">$fileName</span> . <span class="string">&#x27;.part&#x27;</span> . <span class="variable">$i</span>;</span><br><span class="line">        <span class="variable">$inputStream</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$inputFile</span>, <span class="string">&#x27;rb&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">stream_copy_to_stream</span>(<span class="variable">$inputStream</span>, <span class="variable">$outputStream</span>);</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$inputStream</span>);</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$inputFile</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$outputStream</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">true</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">false</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这是一段网页分段上传文件的代码示例，包括了 PHP+HTML+JavaScript。但是这段代码我并没有进行可用性测试，我并不知道他的可用性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入隧道名：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r filename</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入你的私钥：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r private_key</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入你监听的端口：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r listen_port</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入你的dn42 IP：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r your_dn42_ip</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入对方的dn42 IP：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r peer_dn42_ip</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入对方的公钥：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r peer_public_key</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入对方的endpoint：&quot;</span></span><br><span class="line"><span class="built_in">read</span> -r peer_endpoint</span><br><span class="line"></span><br><span class="line">content=<span class="string">&quot;[Interface]</span></span><br><span class="line"><span class="string">PrivateKey = <span class="variable">$private_key</span></span></span><br><span class="line"><span class="string">ListenPort = <span class="variable">$listen_port</span></span></span><br><span class="line"><span class="string">PostUp = ip addr add <span class="variable">$your_dn42_ip</span> peer <span class="variable">$peer_dn42_ip</span> dev %i</span></span><br><span class="line"><span class="string">Table = off</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Peer]</span></span><br><span class="line"><span class="string">PublicKey = <span class="variable">$peer_public_key</span></span></span><br><span class="line"><span class="string">Endpoint = <span class="variable">$peer_endpoint</span></span></span><br><span class="line"><span class="string">AllowedIPs = 10.0.0.0/8, 172.20.0.0/14, 172.31.0.0/16, fd00::/8, fe80::/64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$content</span>&quot;</span> | sudo <span class="built_in">tee</span> <span class="string">&quot;/etc/wireguard/<span class="variable">$filename</span>.conf&quot;</span> &gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;内容已写入到 /etc/wireguard/<span class="variable">$filename</span>.conf 文件中。&quot;</span></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> <span class="string">&quot;wg-quick@<span class="variable">$filename</span>&quot;</span></span><br><span class="line">wg-quick up <span class="variable">$filename</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;隧道 <span class="variable">$filename</span> 已建立。&quot;</span></span><br><span class="line"></span><br><span class="line">wg</span><br></pre></td></tr></table></figure><p>这是一段Shell（也就是俗称的脚本）代码，非常优雅的实现了WireGuard的一个隧道建立。</p><p>尽管他的代码不错，但是建议不要应用于大型项目，他的代码能力仍具有一定的局限性，项目大了很容易出问题。</p><h3 id="代码阅读能力"><a href="#代码阅读能力" class="headerlink" title="代码阅读能力"></a>代码阅读能力</h3><p>我们使用刚刚的Python代码作为例子给Gpt-3.5让他尝试理解，下面是他的回答：</p><blockquote><p>这段代码是一个简单的基于Socket的聊天服务器。它使用Python的socket模块来创建服务器，并允许多个客户端连接和发送消息。<br>首先，代码导入了一些必要的模块，包括socket、threading、base64、markdown2和emoji。然后，创建了一个服务器socket对象，使用AF_INET和SOCK_STREAM参数来指定使用IPv4地址和TCP协议。<br>接下来，服务器绑定到IP地址 ‘0.0.0.0’ 和端口号 5555 上，并开始监听连接请求。clients和addresses字典用于存储连接的客户端和对应的地址。<br>代码中定义了一些函数和方法来处理客户端的连接和消息。send_to_client函数被用于将消息发送给指定的客户端，broadcast函数被用于将消息广播给所有连接的客户端，remove_client函数用于移除断开连接的客户端。<br>handle_client函数是在新线程中启动的，用于处理每个连接的客户端。它通过接收客户端发送的消息，并根据消息的内容进行不同的处理。如果收到的消息以 “&#x2F;p2p “ 开头，它会将消息转发给指定的客户端。如果收到的消息以 “&#x2F;broadcast “ 开头，它将广播消息给所有客户端。否则，它会将消息以广播形式发送给所有客户端。<br>最后，通过一个无限循环来接受客户端的连接，并为每个连接的客户端启动一个新线程来处理。每当有新的客户端连接成功，服务器会广播一个加入聊天室的消息，并打印出连接的信息。<br>这段代码简单地演示了一个聊天服务器，但在现实的应用中还需要添加更多的功能和安全性检查。这包括验证客户端发送的消息、处理异常情况以及保护服务器免受恶意攻击。</p></blockquote><p>我们可以看到，他非常完美的get到了代码的意思，还推测了代码的用途，并给出了安全建议。<br><del>或许这就是他为什么能火罢</del></p><h2 id="图片生成"><a href="#图片生成" class="headerlink" title="图片生成"></a>图片生成</h2><p>本次测试模型为Dell-E-2<br>以下为一些测试图片<br><img src="https://s2.loli.net/2024/01/28/qVFYhtH4Ur5oadD.jpg" alt="IMG_20240128_121534_386.jpg"></p><p><img src="https://s2.loli.net/2024/01/28/Ls4TVC9wlh8bZSQ.jpg" alt="IMG_20240128_121517_855.jpg"></p><p><img src="https://s2.loli.net/2024/01/28/Iu7TqGdoPYWOz2n.jpg" alt="IMG_20240128_121524_445.jpg"></p><p><img src="https://s2.loli.net/2024/01/28/igxcDpSralfuWUI.jpg" alt="IMG_20240128_121432_984.jpg"></p><p><img src="https://s2.loli.net/2024/01/28/ajPFKs64OzH1MJu.jpg" alt="IMG_20240128_121437_668.jpg"></p><p><img src="https://s2.loli.net/2024/01/28/wA3D1fVuhk7HFMr.jpg" alt="IMG_20240128_121509_439.jpg"></p><p><img src="https://s2.loli.net/2024/01/28/2REOmHtvBqyzLVN.jpg" alt="IMG_20240128_121449_545.jpg"><br>我们可以看到，图片生成效果大抵还是不错的。<br>但是作为AI绘图的老毛病，画人和画手多少还是有点大病。特别是人，就像是拼贴画一样，这里一个部件那里一个部件。整个看下来非常的不协调。<br>总的来说作为生成式的绘图AI他已经非常不错了，完全可以日常使用。<del>只要他不涉及到绘制人像</del></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>作为一个工作助手，Openai提供的服务是完全够用了，语言能力能看，代码能力耐打，图片生成能用。尽管还有不少的进步空间，但是Openai一直在努力。希望他们以后会带来更加震撼的产品。</p><h1 id="番外"><a href="#番外" class="headerlink" title="番外"></a>番外</h1><p>你甚至可以用来当作化学实验室使用<br><img src="https://s2.loli.net/2024/01/28/iRO7fb4mTuyCvkc.jpg" alt="Screenshot_20240128_131318_com.openai.chatgpt.jpg"><br>是不是还挺好玩<br>后续会有一篇文章来更新Openai提示词</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;作为2023年的爆炸性事件，Openai这家公司可以说是改变了世界。虽然网络上已经有很多对他们的模型进行了试用和测</summary>
      
    
    
    
    
    <category term="Openai" scheme="https://blog.jyf.icu/tags/Openai/"/>
    
    <category term="Gpt" scheme="https://blog.jyf.icu/tags/Gpt/"/>
    
    <category term="测评" scheme="https://blog.jyf.icu/tags/%E6%B5%8B%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>祝大家元旦快乐</title>
    <link href="https://blog.jyf.icu/2023/12/31/2024%E5%85%83%E6%97%A6%E5%BF%AB%E4%B9%90/"/>
    <id>https://blog.jyf.icu/2023/12/31/2024%E5%85%83%E6%97%A6%E5%BF%AB%E4%B9%90/</id>
    <published>2023-12-31T00:00:00.000Z</published>
    <updated>2023-12-31T04:41:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>在元旦祝各位大佬：Windows开机蓝屏，Linux开机Kernel Panic，macos开机五国，服务器iDRAC&#x2F; iLO&#x2F;IPMI&#x2F;KVM&#x2F;CVM全部失联，路由器全爆炸，路由表内存全溢出，交换机全环路，防火墙全阻断，无线信道全冲突，压接网线全短路，bgp全漏表，机柜全断电，raid全爆炸，nas数据全丢，光模块全炸，光纤全不通，光猫全烫手，电表全倒转，空开全烧穿，固态出0E。<br>PHP全Fatal Error，fileinfo全装不上，npm&#x2F;composer install全报错，Laravel Mix全报未知错误，服务器全部宕机，电脑开机报错，Linux rm -rf &#x2F;*，数据库Delete，CN2全绕路，线路全阻断，海外网站全被墙，服务器炸库，网关无响应，代理500，网站502，RAID组几个一起炸几个，UPS爆炸，一年到头DDOS CC不断，流量几千个T，并发上亿，ping全超时，备案全重审，资源404，SSL全重定向，CDN全不回源，爬虫永远不来你家，收录零蛋，数据库超时，wordpress爆致命错误。<br>twrp卡刷必报错，第三方rom必变砖，download模式必掉，9008救砖救不过，小米解锁必卡168，刷第三方内核必卡第二屏，Magisk刷模块必格机，Riru必异常，lsposed模块加载必失败，刷抖音必烧屏，频闪必瞎眼，刷新率必锁60hz，钛备份效验出错。<br>编译器抽风，编译程序全错误，错误全都抛不出，多线程全都调不好，忘记保存必停电，自动保存必成0x00，内存全吃满，CPU高发热，调试全崩溃，封装全找不到主类，问题全无法解决，IDE全无响应，找人帮忙全不是大佬，有想法时全尿急，变量全接不到值，写过的代码全忘记，自己的注释全看不懂，程序编译后全是bug，bug越修越多</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在元旦祝各位大佬：Windows开机蓝屏，Linux开机Kernel Panic，macos开机五国，服务器iDRAC&amp;#x2F; iLO&amp;#x2F;IPMI&amp;#x2F;KVM&amp;#x2F;CVM全部失联，路由器全爆炸，路由表内存全溢出，交换机全环路，防火墙全阻断，无线信道全</summary>
      
    
    
    
    
    <category term="整活" scheme="https://blog.jyf.icu/tags/%E6%95%B4%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>国家主席习近平发表2024年新年贺词</title>
    <link href="https://blog.jyf.icu/2023/12/31/%E4%B8%BB%E5%B8%AD2024%E8%B4%BA%E8%AF%8D/"/>
    <id>https://blog.jyf.icu/2023/12/31/%E4%B8%BB%E5%B8%AD2024%E8%B4%BA%E8%AF%8D/</id>
    <published>2023-12-31T00:00:00.000Z</published>
    <updated>2024-01-01T13:44:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家好！冬至阳生，岁回律转。在这辞旧迎新的美好时刻，我在北京向大家致以新年的祝福！</p><p>2023年，我们接续奋斗、砥砺前行，经历了风雨洗礼，看到了美丽风景，取得了沉甸甸的收获。大家记住了一年的不易，也对未来充满信心。</p><p>这一年的步伐，我们走得很坚实。疫情防控平稳转段，我国经济持续回升向好，高质量发展扎实推进。现代化产业体系更加健全，一批高端化、智能化、绿色化新型支柱产业快速崛起。粮食生产“二十连丰”，绿水青山成色更足，乡村振兴展现新气象。东北全面振兴谱写新篇，雄安新区拔节生长，长江经济带活力脉动，粤港澳大湾区勇立潮头。中国经济在风浪中强健了体魄、壮实了筋骨。</p><p>这一年的步伐，我们走得很有力量。经过久久为功的磨砺，中国的创新动力、发展活力勃发奔涌。C919大飞机实现商飞，国产大型邮轮完成试航，神舟家族太空接力，“奋斗者”号极限深潜。国货潮牌广受欢迎，国产新手机一机难求，新能源汽车、锂电池、光伏产品给中国制造增添了新亮色。中国以自强不息的精神奋力攀登，到处都是日新月异的创造。</p><p>这一年的步伐，我们走得很见神采。成都大运会、杭州亚运会精彩纷呈，体育健儿勇创佳绩。假日旅游人潮涌动，电影市场红红火火，“村超”、“村晚”活力四射，低碳生活渐成风尚，温暖的生活气息、复苏的忙碌劲头，诠释了人们对美好幸福的追求，也展现了一个活力满满、热气腾腾的中国。</p><p>这一年的步伐，我们走得很显底气。中国是一个伟大的国度，传承着伟大的文明。在这片辽阔的土地上，大漠孤烟、江南细雨，总让人思接千载、心驰神往；黄河九曲、长江奔流，总让人心潮澎湃、豪情满怀。良渚、二里头的文明曙光，殷墟甲骨的文字传承，三星堆的文化瑰宝，国家版本馆的文脉赓续……泱泱中华，历史何其悠久，文明何其博大，这是我们的自信之基、力量之源。</p><p>中国不仅发展自己，也积极拥抱世界，担当大国责任。我们成功举办中国－中亚峰会、第三届“一带一路”国际合作高峰论坛，一系列主场外交迎来五洲宾朋。我也访问了一些国家，出席了一些国际会议，会晤了不少老朋友、新伙伴，分享中国主张，深化彼此共识。世事变迁，和平发展始终是主旋律，合作共赢始终是硬道理。</p><p>前行路上，有风有雨是常态。一些企业面临经营压力，一些群众就业、生活遇到困难，一些地方发生洪涝、台风、地震等自然灾害，这些我都牵挂在心。大家不惧风雨、守望相助，直面挑战、攻坚克难，我深受感动。辛勤劳作的农民，埋头苦干的工人，敢闯敢拼的创业者，保家卫国的子弟兵，各行各业的人们都在挥洒汗水，每一个平凡的人都作出了不平凡的贡献！人民永远是我们战胜一切困难挑战的最大依靠。</p><p>明年是新中国成立75周年。我们要坚定不移推进中国式现代化，完整、准确、全面贯彻新发展理念，加快构建新发展格局，推动高质量发展，统筹好发展和安全。要坚持稳中求进、以进促稳、先立后破，巩固和增强经济回升向好态势，实现经济行稳致远。要全面深化改革开放，进一步提振发展信心，增强经济活力，以更大力度办教育、兴科技、育人才。要继续支持香港、澳门发挥自身优势，在更好融入国家发展大局中保持长期繁荣稳定。祖国统一是历史必然，两岸同胞要携手同心，共享民族复兴的伟大荣光。</p><p>我们的目标很宏伟，也很朴素，归根到底就是让老百姓过上更好的日子。孩子的抚养教育，年轻人的就业成才，老年人的就医养老，是家事也是国事，大家要共同努力，把这些事办好。现在，社会节奏很快，大家都很忙碌，工作生活压力都很大。我们要营造温暖和谐的社会氛围，拓展包容活跃的创新空间，创造便利舒适的生活条件，让大家心情愉快、人生出彩、梦想成真。</p><p>当前，世界上还有一些地方处在战火硝烟之中。中国人民深知和平的珍贵，我们愿同国际社会一道，以人类前途为怀、以人民福祉为念，推动构建人类命运共同体，建设更加美好的世界。</p><p>此时此刻，夜色斑斓，万家灯火。让我们一起，祝愿祖国繁荣昌盛、世界和平安宁！祝愿大家福暖四季、顺遂安康！</p><p>谢谢大家！</p><p><a href="http://www.news.cn/politics/leaders/20231231/64cc67c422ae40038a4c47ab241bce11/c.html">来源</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大家好！冬至阳生，岁回律转。在这辞旧迎新的美好时刻，我在北京向大家致以新年的祝福！&lt;/p&gt;
&lt;p&gt;2023年，我们接续奋斗、砥砺前行，经历了风雨洗礼，看到了美丽风景，取得了沉甸甸的收获。大家记住了一年的不易，也对未来充满信心。&lt;/p&gt;
&lt;p&gt;这一年的步伐，我们走得很坚实。疫</summary>
      
    
    
    
    
    <category term="重要讲话" scheme="https://blog.jyf.icu/tags/%E9%87%8D%E8%A6%81%E8%AE%B2%E8%AF%9D/"/>
    
    <category term="新年贺词" scheme="https://blog.jyf.icu/tags/%E6%96%B0%E5%B9%B4%E8%B4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>你真的在听吗？</title>
    <link href="https://blog.jyf.icu/2023/12/17/%E4%BD%A0%E7%9C%9F%E7%9A%84%E5%9C%A8%E5%90%AC%E5%90%97/"/>
    <id>https://blog.jyf.icu/2023/12/17/%E4%BD%A0%E7%9C%9F%E7%9A%84%E5%9C%A8%E5%90%AC%E5%90%97/</id>
    <published>2023-12-17T11:42:25.000Z</published>
    <updated>2023-12-31T04:40:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>人们往往都不会珍惜眼前已有的成果，一旦发现有所瑕疵，便会无限放大缺点。</p><p>检测脚本一旦有一个不准，那整体感觉就不可信。所以为什么要测呢，大家都手动去检测一下，就能知道自己所用流媒体的解锁情况，自动化程序慢慢蚕食你的主观判断能力，产生依赖性。</p><p>你真的需要那么多解锁吗？是看到那一片绿油油的色彩充斥着整个屏幕而带来的满足感罢了。自动化检测脚本只是工具，以实际情况为准，所有图片最后一行都是这句话。</p><p>所以，你真的在听吗？👂</p><p>From <a href="https://t.me/FullTClash">FullTClash</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;人们往往都不会珍惜眼前已有的成果，一旦发现有所瑕疵，便会无限放大缺点。&lt;/p&gt;
&lt;p&gt;检测脚本一旦有一个不准，那整体感觉就不可信。所以为什么要测呢，大家都手动去检测一下，就能知道自己所用流媒体的解锁情况，自动化程序慢慢蚕食你的主观判断能力，产生依赖性。&lt;/p&gt;
&lt;p&gt;你真的</summary>
      
    
    
    
    
    <category term="Tech" scheme="https://blog.jyf.icu/tags/Tech/"/>
    
  </entry>
  
  <entry>
    <title>注册DN42网络</title>
    <link href="https://blog.jyf.icu/2023/11/11/%E6%B3%A8%E5%86%8Cdn42/"/>
    <id>https://blog.jyf.icu/2023/11/11/%E6%B3%A8%E5%86%8Cdn42/</id>
    <published>2023-11-11T12:42:25.000Z</published>
    <updated>2024-02-04T15:05:56.189Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阅前须知"><a href="#阅前须知" class="headerlink" title="阅前须知"></a>阅前须知</h2><ul><li>阅读本教程，<strong>默认</strong>您拥有一定的<a href="https://blog.csdn.net/qq_44094296/article/details/114324505">git基础</a></li><li>阅读本教程，<strong>默认</strong>您已经阅读过<a href="https://blog.jyf.icu/2023/10/21/post2/">这篇文章</a></li><li>由于DN42的网络性质（详见DN42介绍部分），在中国境内链接<em><strong>可能有法律风险</strong></em>，请自行<strong>斟酌部署位置</strong></li></ul><h2 id="DN42介绍"><a href="#DN42介绍" class="headerlink" title="DN42介绍"></a>DN42介绍</h2><blockquote><p>DN42 全称 Decentralized Network 42（42 号去中心网络），是一个大型、去中心化的 VPN 网络。但是与其它传统 VPN 不同的是，DN42 本身不提供 VPN 出口服务，即不提供规避网络审查、流媒体解锁等类似服务。相反，DN42 的目的是模拟一个互联网。它使用了大量在目前互联网骨干上应用的技术（例如 BGP 和递归 DNS），可以很好地模拟一个真实的网络环境。<br>简而言之，DN42：</p><ul><li>不适合单纯想要保护隐私、规避网络审查的用户</li><li>不适合在网内消耗大量流量，例如用于解锁流媒体服务的用户</li><li>适合想要研究网络技术，练习服务器、路由器等网络设备配置，甚至后续在真实互联网建立 AS 的用户</li><li>适合拥有真实 AS，但担心自己<a href="https://blog.cloudflare.com/how-verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-offline-today/">配置错误广播出错误路由、干掉半个互联网</a>，希望有个地方测试的用户。<br>via <a href="https://lantian.pub/article/modify-website/dn42-experimental-network-2020.lantian/">LanTian’s blog</a><br>简单来说，DN42是一个大型VPN网络，为了模拟真实的互联网。（注意：<strong>在中国大陆区域链接VPN，可能存在法律风险，建议使用非大陆区域的服务器链接。</strong>）</li></ul></blockquote><h2 id="大致步骤及你需要什么"><a href="#大致步骤及你需要什么" class="headerlink" title="大致步骤及你需要什么"></a>大致步骤及你需要什么</h2><h3 id="大致步骤"><a href="#大致步骤" class="headerlink" title="大致步骤"></a>大致步骤</h3><ol><li>在DN42的<a href="https://git.dn42.dev/">官方GIT</a>处申请一个账号，然后将后文创建的文件PR给<a href="https://git.dn42.dev/dn42/registry">注册存储库</a></li><li>在注册通过后，你需要<em>寻找一个可能的节点和你peer</em>，然后和节点的持有人交换信息，和他约定好使用的VPN软件和路由协议。</li><li>建立路由（一般是BGP），入网。</li><li>enjoy ，然后发现更多玩法（注册域名，建立网站啥啥的）</li></ol><h3 id="你需要什么"><a href="#你需要什么" class="headerlink" title="你需要什么"></a>你需要什么</h3><ol><li>一台24小时在线并且拥有root权限的服务器</li><li>大量时间</li><li>一颗热爱的心</li></ol><h2 id="开始注册"><a href="#开始注册" class="headerlink" title="开始注册"></a>开始注册</h2><p><strong>强烈建议不要使用windows系统，如果一定要也请使用WSL</strong><br><strong>强烈建议不要使用windows系统，如果一定要也请使用WSL</strong><br><strong>强烈建议不要使用windows系统，如果一定要也请使用WSL</strong></p><h3 id="寻找你的ASN-IPV4块-IPV6块"><a href="#寻找你的ASN-IPV4块-IPV6块" class="headerlink" title="寻找你的ASN IPV4块 IPV6块"></a>寻找你的ASN IPV4块 IPV6块</h3><p>找你喜欢的IP块和ASN就是了<br>IP地址由于DN42官方有保留块而且很容易和其他人撞上了，建议使用工具查找。<br>ASN也差不多，建议使用工具找<br><a href="https://explorer.burble.com/free#/">工具地址</a></p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><ol><li>在官方GIT注册一个账户，打开<code>dn42/registry</code>这个仓库，点右上角的 Fork，把仓库复制一份到你自己的账户。</li><li>将你的fork clone到本地。</li><li>在你的本地仓库创建一些文件，大概包括：<br>1. <code>data/mntner/[NAME]-MNT</code><br>2. <code>data/person/[NAME]-DN42</code><br>3. <code>data/aut-num/[YOUR_ASN]</code><br>4. <code>data/inetnum/[YOUR_IPV4_BLOCK]</code><br>5. <code>data/route/[YOUR_IPV4_BLOCK]</code><br>6. <code>data/inet6num/[YOUR_IPV6_BLOCK]</code><br>7. <code>data/route6/[YOUR_IPV6_BLOCK]</code> </li><li>将你创建的文件使用PGP签名提交到你fork的仓库里，然后向 <code>dn42/registry</code>发起 Pull Request（PR）。（<strong>注意：发PR一定要用英文</strong>）</li><li>等待你的PR被合并</li></ol><p>这里比较粗糙，你可以参考<a href="https://lantian.pub/article/modify-website/dn42-experimental-network-2020.lantian/#%E6%B3%A8%E5%86%8C%E8%BF%87%E7%A8%8B">LanTian大佬的博客</a> 或者我的<a href="https://git.dn42.dev/dn42/registry/pulls/3169">PR</a></p><h2 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h2><p>那就是和别人peer然后入网啦<br>至于教程，后续会更的（可以看看DN42标签看看更新没有QAQ）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;阅前须知&quot;&gt;&lt;a href=&quot;#阅前须知&quot; class=&quot;headerlink&quot; title=&quot;阅前须知&quot;&gt;&lt;/a&gt;阅前须知&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;阅读本教程，&lt;strong&gt;默认&lt;/strong&gt;您拥有一定的&lt;a href=&quot;https://blog.csd</summary>
      
    
    
    
    
    <category term="DN42" scheme="https://blog.jyf.icu/tags/DN42/"/>
    
    <category term="Tech" scheme="https://blog.jyf.icu/tags/Tech/"/>
    
    <category term="Web" scheme="https://blog.jyf.icu/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>使用pgp向github提交签名commit</title>
    <link href="https://blog.jyf.icu/2023/10/21/%E7%AD%BE%E5%90%8D%E6%8F%90%E4%BA%A4commit/"/>
    <id>https://blog.jyf.icu/2023/10/21/%E7%AD%BE%E5%90%8D%E6%8F%90%E4%BA%A4commit/</id>
    <published>2023-10-21T14:15:25.000Z</published>
    <updated>2024-01-01T13:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快速介绍"><a href="#快速介绍" class="headerlink" title="快速介绍"></a>快速介绍</h2><h4 id="什么是pgp"><a href="#什么是pgp" class="headerlink" title="什么是pgp"></a>什么是pgp</h4><blockquote><p>GNU Privacy Guard（GnuPG或GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG是自由软件，遵循IETF订定的OpenPGP技术标准设计，并与PGP保持兼容。</p></blockquote><h4 id="为什么要提交签名commit"><a href="#为什么要提交签名commit" class="headerlink" title="为什么要提交签名commit"></a>为什么要提交签名commit</h4><p>众所周知，Git的提交只需要自己的邮箱和密码，这就出现了一个漏洞：  只要他人有你的用户名和邮箱，就可以进行提交，就可以更改你的仓库内容。  </p><p>一个典型的案例：<br><code>https://spencerwoo.com/blog/wait-this-is-not-my-commit</code></p><h2 id="阅前须知"><a href="#阅前须知" class="headerlink" title="阅前须知"></a>阅前须知</h2><ul><li>阅读本教程，<strong>默认</strong>您拥有一定的<a href="https://blog.csdn.net/qq_44094296/article/details/114324505">git基础</a></li><li>本教程环境为 <code>ubuntu22.04</code></li></ul><h2 id="创建PGP密钥"><a href="#创建PGP密钥" class="headerlink" title="创建PGP密钥"></a>创建PGP密钥</h2><p>使用下列命令来创建一个属于你的密钥对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">gpg --full-generate-key</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">-在密钥种类处：选择默认 RSA and DSA 即可;</span><br><span class="line">- 在密钥长度选项处：选择 4096 bits;</span><br><span class="line">- 在密钥过期时间处：按照自己的需要选择，建议避免永不过期；</span><br><span class="line">- 在我们的*用户 ID*和*邮箱*处：常用用户名，并**填入 GitHub 上面认证过的邮箱**;</span><br><span class="line">- 最后，为密钥设置一个安全的密码，并一定记住这一密码。（当然你也可以不设置直接回车。不过不建议）</span><br><span class="line"></span><br><span class="line">这样，我们就拥有了一个属于自己的密钥对</span><br><span class="line"><span class="comment">## 查看并上传密钥到github</span></span><br><span class="line">使用下列命令来查看密钥</span><br><span class="line">``` bash</span><br><span class="line">gpg --list-secret-keys --keyid-format LONG</span><br></pre></td></tr></table></figure><p>其输出应该像这样（come from <a href="https://spencerwoo.com/blog/wait-this-is-not-my-commit">there</a> ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/home/spencer/.gnupg/pubring.kbx</span><br><span class="line">--------------------------------</span><br><span class="line">sec   rsa4096/24CD550268849CA0 2020-08-29 [SC]</span><br><span class="line">      9433E1B6807DE7C15E20DC3B24CD550268849CA0</span><br><span class="line">uid                 [ultimate] Spencer Woo (My GPG key) &lt;my@email.com&gt;</span><br><span class="line">ssb   rsa4096/EB754D2B2409E9FE 2020-08-29 [E]</span><br></pre></td></tr></table></figure><p>其中，第一行的<code>RSA4096</code>后的<code>24CD550268849CA0</code>为你的PGP指纹。请妥善保存它（后面会用到）。</p><p>接着我们需要告诉 GitHub 我们使用的 GPG 公钥。</p><p>使用下面的命令即可导出我们的 GPG 公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --armor --<span class="built_in">export</span> [你的指纹]</span><br></pre></td></tr></table></figure><p>接着将输出（他应该长这样）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">dasSJDsiiiaF......</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK---</span><br></pre></td></tr></table></figure><p>粘贴到 <a href="https://github.com/settings/keys">此处</a>，并保存。</p><h2 id="使用git签名commit"><a href="#使用git签名commit" class="headerlink" title="使用git签名commit"></a>使用git签名commit</h2><p>使用如下命令，就可以完成本操作。（此命令会开启所有commit全部签名，如果不需要请查阅后文）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.signingkey [你的指纹]</span><br><span class="line">git config --global commit.gpgsign <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如需单次签名 使用<code>git commit</code>命令时，在结尾加入<code>-S</code>参数，即：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -S -m <span class="string">&quot;commit注释&quot;</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>完成上述步骤后进行一次提交，即可看见自己的commit上有了Verified的绿色标签（如果不行，你可以找谷歌爸爸<del>（手动狗头）</del>）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;快速介绍&quot;&gt;&lt;a href=&quot;#快速介绍&quot; class=&quot;headerlink&quot; title=&quot;快速介绍&quot;&gt;&lt;/a&gt;快速介绍&lt;/h2&gt;&lt;h4 id=&quot;什么是pgp&quot;&gt;&lt;a href=&quot;#什么是pgp&quot; class=&quot;headerlink&quot; title=&quot;什么是pg</summary>
      
    
    
    
    
    <category term="git" scheme="https://blog.jyf.icu/tags/git/"/>
    
    <category term="PGP" scheme="https://blog.jyf.icu/tags/PGP/"/>
    
  </entry>
  
  <entry>
    <title>CloudFlare越来越慢了</title>
    <link href="https://blog.jyf.icu/2023/10/02/%E7%97%9B%E6%96%A5cf%E6%97%A0%E8%83%BD%E5%85%9A/"/>
    <id>https://blog.jyf.icu/2023/10/02/%E7%97%9B%E6%96%A5cf%E6%97%A0%E8%83%BD%E5%85%9A/</id>
    <published>2023-10-02T12:41:33.000Z</published>
    <updated>2023-11-04T14:54:58.374Z</updated>
    
    <content type="html"><![CDATA[<p>CloudFlare哪里慢了，这么多年都是这个速度，好吧不要睁着眼睛乱说，全球CDN很难的。 而且CloudFlare真的不是随便给你做CDN的品牌欸，我跟CF跟了多少年，他怎么被你们滥用的我是最知道的一个人，他都差点把他们家掏给GFW了，差点CloudFlare姓China了，真的乱说。 这么多年都是免费的，哪里慢了（很好用的），注册个账号就送你各种可以滥用的服务。 有的时候找找自己的原因，这么多年了GFW有没有高，好不？ 这么多年了都是这个服务，我真的快疯掉了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CloudFlare哪里慢了，这么多年都是这个速度，好吧不要睁着眼睛乱说，全球CDN很难的。 而且CloudFlare真的不是随便给你做CDN的品牌欸，我跟CF跟了多少年，他怎么被你们滥用的我是最知道的一个人，他都差点把他们家掏给GFW了，差点CloudFlare姓Chin</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://blog.jyf.icu/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>快速创建一个简单并且优雅的静态博客</title>
    <link href="https://blog.jyf.icu/2023/09/10/%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>https://blog.jyf.icu/2023/09/10/%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-09-10T01:02:25.000Z</published>
    <updated>2023-09-16T14:20:38.669Z</updated>
    
    <content type="html"><![CDATA[<h3 id="阅前须知"><a href="#阅前须知" class="headerlink" title="阅前须知"></a>阅前须知</h3><ul><li>阅读本教程，<strong>默认</strong>你已经拥有<a href="https://github.com/">github</a>账号，并且会一定&gt;基础操作。</li><li>阅读本教程，<strong>默认</strong>您拥有<a href="https://www.cloudflare-cn.com/">cloud flare</a>账号&gt;，并且已经添加域名。</li><li>阅读本教程，<strong>默认</strong>您拥有一定的<a href="https://blog.csdn.net/qq_44094296/article/details/114324505">git基础</a></li><li>阅读本教程，<strong>默认</strong>您已经成功<a href="https://blog.csdn.net/zimeng303/article/details/112167688">配置node.js环境</a></li></ul><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>如果你想要无服务器搭建一个博客，并且使用简单。那么本教程可以帮助你<br><br>本教程使用的程序为<code>hexo</code>，使用的环境为 <code>ubuntu 22.04</code></p><h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><ol><li><p>安装hexo主程序<br>注意事项</p><ul><li>请<strong>确保</strong>nodejs版本<strong>高于</strong>12.0</li><li>如果是<strong>非linux系统</strong>，<strong>确保</strong>安装了git</li></ul><p>一切准备就绪后，使用<code>npm install -g hexo-cli</code> 进行安装，如无<strong>报错</strong>就可进行下一步</p></li><li><p>创建hexo文件夹</p><ul><li>安装 Hexo 完成后，请执行下列命令，将<code>&lt;folder&gt;</code>替换为你想要的名字，请<strong>不要</strong>使用<strong>中文</strong>命名<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li>Hexo 将会在指定文件夹中新建所需要的文件。</li><li>在该目录下有<code>_config.yml</code>文件，该文件为配置文件，配置项详见<a href="https://hexo.io/zh-cn/docs/configuration">此处</a></li></ul></li><li><p>创建远程仓库</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;阅前须知&quot;&gt;&lt;a href=&quot;#阅前须知&quot; class=&quot;headerlink&quot; title=&quot;阅前须知&quot;&gt;&lt;/a&gt;阅前须知&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;阅读本教程，&lt;strong&gt;默认&lt;/strong&gt;你已经拥有&lt;a href=&quot;https://github.co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我方奉劝某人迷途知返</title>
    <link href="https://blog.jyf.icu/2023/04/02/%E4%B8%AD%E4%BA%8C%E5%85%AC%E5%91%8A/"/>
    <id>https://blog.jyf.icu/2023/04/02/%E4%B8%AD%E4%BA%8C%E5%85%AC%E5%91%8A/</id>
    <published>2023-04-02T10:31:05.000Z</published>
    <updated>2023-11-04T14:54:58.350Z</updated>
    
    <content type="html"><![CDATA[<p>鉴于某同学的言行举止，实在是超越了我方的忍耐下限特出此文。 我谨代表华夏学生同盟会中央委员会奉劝某位同学迷途知返，不要在错误的道路越走越远。 你所做出行为让大多数人都厌恶你而不自知 。当这种厌恶体现出来时，而你却还问“我有什么问题”，对此我方实在无话可说。对于你作出的种种恶劣行为我方暂不一一列举。<strong>但我方希望你能收起你那颠覆三观，恶心至极而自以为荣的动作和你那毫无营养的玩烂梗的话语，不要再像个复读机一样的复读。</strong> 同学们能够包容你，但不是无限度的。最后希望这位同学你能自重自爱。 出于同学关系，我方暂时不透露姓名。<strong>如若不改，我方作出反应时，不要在我方面前提及保护个人隐私云云。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;鉴于某同学的言行举止，实在是超越了我方的忍耐下限特出此文。 我谨代表华夏学生同盟会中央委员会奉劝某位同学迷途知返，不要在错误的道路越走越远。 你所做出行为让大多数人都厌恶你而不自知 。当这种厌恶体现出来时，而你却还问“我有什么问题”，对此我方实在无话可说。对于你作出的种种恶</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://blog.jyf.icu/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>三星堆究竟牛逼在哪？</title>
    <link href="https://blog.jyf.icu/2023/02/19/%E4%B8%89%E6%98%9F%E5%A0%86%E7%A9%B6%E7%AB%9Fnb%E5%9C%A8%E5%93%AA/"/>
    <id>https://blog.jyf.icu/2023/02/19/%E4%B8%89%E6%98%9F%E5%A0%86%E7%A9%B6%E7%AB%9Fnb%E5%9C%A8%E5%93%AA/</id>
    <published>2023-02-19T15:11:05.000Z</published>
    <updated>2023-11-04T14:54:58.342Z</updated>
    
    <content type="html"><![CDATA[<p>三星堆的价值在我看来，是还原了我们漫长历史中被湮灭的一部分。 中国是四大文明古国之一，也是唯一延续至今的古文明。然而中华文明的神话故事有一个特点：没有特别有名的太阳神和月亮神。 人类社会经历过万物有灵的阶段，从多神教走向一神教，这是社会发展的必然过程。 早期，人类的饮食来源极度依赖于自然界，特别是太阳的光和热。人类依靠日月星辰的运行来制定历法，安排耕作，纪录时间，占卜未来。因此，太阳神崇拜是许多古文明必有的信仰。例如古埃及的拉神，古希腊的阿波罗。但是中国，却没有家喻户晓的太阳神。 很多人都听说过大羿射日。可大羿是人类的英雄，并不是太阳神。 有人问，那伏羲和女娲呢？在某些被发掘的古代墓葬壁画上，他们也被刻画成太阳神和月亮神。 但如果，你问问你身边的人，你说女娲是月亮神，伏羲是太阳神，我相信他们都会睁着一双茫然的眼睛。 中华民族的传统神话难道真的没有日神和月神吗？ 其实是有的。 那就是《山海经》里的羲和和常曦。 来翻翻书： 《山海经 大荒南经》记载： “东南海之外，甘水之间，有羲和之国。有女子名羲和，日浴于甘渊。羲和者，帝俊之妻，生十日。” 这段话描绘了一个动人的场景：在一座高耸入云的峡谷，浩浩荡荡的江水将高山分为两半，流向海洋。一位名叫羲和的女神，手捧一轮炽烈的红日，满怀慈爱地把它放进冰凉的江水中。烈日被洗去了满身的疲惫和尘土，放射出不同于白昼的温柔光芒。羲和女神从水中捞起泛白的太阳，把它轻轻挂在了建木树上。 关于这个故事，晋人郭璞有注云：“羲和盖天地始生，主日月者也。故（归藏）《启筮》曰：‘空桑之苍苍，八极之既张，乃有夫羲和，是主日月。职出入，以为晦明’。” 《归藏》是先秦时期的典籍，记录了大量先秦文化。 郭璞在这里明确指出，羲和，就是太阳神。 另外，关于羲和浴日的传说，《尚书.尧典》也有记载：“分命羲仲，宅嵎夷，曰暘谷。”旸谷就是太阳洗澡的汤谷。 羲和的太阳神话最古老最直观的证据，在现在山东省的日照市。那里的国家五a级太阳文化遗址至今保留着新石器时期太阳崇拜的痕迹。有太阳石，太阳庙，太阳老母像等文物。羲和作为“太阳老母”，在当地极受尊敬。直到解放前，当地还定期举行纪念她生日的集会。这里流传着羲和浴日和女娲补天的传说。羲和被认为是一位和女娲一样，对人类有重大贡献的女神。 除了羲和浴日的传说，在我国古代的典籍和文学作品里，羲和还是太阳的司机。她每天早上赶着六条龙拉的龙车，从汤谷出发，把一个太阳从东边的汤谷，载到西边的甘渊。因此，太阳才会东升西落。 “羲和驭日”几千年来在历史学者和文人骚客笔下代代流传，前有战国的屈原，后有唐朝的李白，杜甫，李贺等都在自己的作品里提到过。 《离骚》：“吾令羲和弭节兮，望崦嵫而勿迫。” 《天问》：“羲和之未扬，若华何光？”东汉王逸注：“羲和，日御也。言日未出之时，若木何能有明赤之光华乎？” 《汉乐府 日出行》： “日出入安穷？时世不与人同。故春非我春，夏非我夏，秋非我秋，冬非我冬。泊如四海之池，遍观是邪谓何？吾知所乐，独乐六龙，六龙之调，使我心若。訾黄其何不徕下！ 李白《日出行》： 日出东方隈，似从地底来。 历天又入海，六龙所舍安在哉？ 其始与终古不息，人非元气，安得与之久徘徊？ 草不谢荣于春风，木不怨落于秋天。 谁挥鞭策驱四运？万物兴歇皆自然。 羲和！羲和！汝奚汩没于荒淫之波？ 鲁阳何德，驻景挥戈？ 逆道违天，矫诬实多。 吾将囊括大块，浩然与溟涬同科！ 杜甫 《同诸公登慈恩寺塔》 高标跨苍天，烈风无时休。 自非旷士怀，登兹翻百忧。 方知象教力，足可追冥搜。 仰穿龙蛇窟，始出枝撑幽。 七星在北户，河汉声西流。 羲和鞭白日，少昊行清秋。 秦山忽破碎，泾渭不可求。 俯视但一气，焉能辨皇州。 回首叫虞舜，苍梧云正愁。 惜哉瑶池饮，日晏昆仑丘。 黄鹄去不息，哀鸣何所投。 君看随阳雁，各有稻粱谋。 —————————————————— 除了羲和浴日&#x2F;驭日神话，《山海经》关于十日还有其他的记载： 《山海经 海外东经》：“汤谷上有扶桑，十日所浴，在黑齿北。居水中，有大木，九日居下枝，一日居上枝。” 《山海经 大荒东经 》：“有谷曰温源谷、汤谷，上有扶木，一日方至，一日方出，皆载于乌。” 看到了吧，“皆载于乌”。 汉朝的典籍《淮南子·精神篇》记载：“日中有踆乌”。 湖南马王堆古墓帛画上，栖息在扶桑树上的九个太阳中，分别有一只乌鸦。 在很多神话里，羲和金乌不相干。但在有些神话里，金乌和羲和是一体的。坐羲和龙车的，就是金乌。金乌就是太阳神鸟。 看到这里，你觉得，羲和和金乌，算不算中国的太阳神呢？ ——————————————————— 羲和和金乌的神话，就是“十日神话”的两个版本。后来合二为一。象征着太阳的金乌成了羲和的儿子，每天被妈妈驾车送去上班，为世界发光发热。 真是温馨又美好。 十日神话曾经是我们国家传播最广的神话之一。 也许你从来没听说过十日神话………但作为中国人的你，肯定听说过“大羿射日”吧？ 那么，大羿为啥要射日啊？ 因为天上有十个太阳啊！！！ …………（是不是恍然大悟？） 十日神话长期流传于民间，流传于历史学者的笔下，现在终于被三星堆的青铜树昭示天下。 这是古中国太阳神话最生动的再现。 除了三星堆，整个中华大地上，没有哪个同规模的古文化如此对太阳顶礼膜拜。（近四米高的青铜神树，黄金树叶，超大太阳青铜轮，考虑到当时的生产水平，这是倾国力在祭祀） 太阳是他们信仰的核心。 继承了三星堆文化血脉的金沙遗址，出土了著名的太阳神鸟金箔，于2005年从1600多件候选文物中脱颖而出，被选为中国文化遗产的标志。 2013年，国家文物局将商周太阳神鸟金饰列入《第三批禁止出国（境）展览文物目录》。 故宫博物院古器物部副主任、金石组组长丁孟《国家人文历史》对太阳神鸟的评价：“它反映了人类早期朴素的世界观和宇宙观。阳光是生命的源泉，因此成为人们最早崇拜的神；中华先民把太阳和在天空中飞翔的神鸟联系在一起，认为是神鸟在驮着太阳飞行。太阳神鸟是古蜀人早期部落的图腾，‘神鸟绕日’表达了中华先民向往太阳、崇尚光明的飞天梦想。” 三星堆人和金沙人，崇拜太阳和光明。 —————————————————— 那么，崇拜太阳的三星堆文明，到底有什么重要价值呢？ 众所周知，在很长一段时间内，中华民族的源头被认为在黄河流域。黄河是我们的“母亲河”。 这是由于从上世纪开始，我国考古学家在黄河沿岸相继发现了许多具有重大考古学价值的遗迹：仰韶文化，半坡文化，陶寺文化，大汶口文化。这些距今6000—4000年前的名字，标志着我国北方地区在距今5000年左右已经进入了文明时代。 然而，三星堆文化的出土，充分说明同时期长江流域也有丝毫不亚于黄河流域的璀璨文明。因为三星堆文明的水平完全达到了以上文化遗址同等甚至更高的文明水平。 换句话说，三星堆的出土，有力地驳斥了华夏文明的“中原起源论”，而支撑起了新的“满天星斗论”。即中华文明的源头不止中原（河南）一处，而是遍历全国各地。 这为中原文明“多元一体”论的假说提供了理论基础。 此外，由于三星堆遗址位置特殊，它既保留了夏商周时代我国西南地区和东部沿海地区文明交融的痕迹，也能从中找到我国西南地区在先秦时代和西亚，中亚，南亚诸国交流的线索。 例如那让研究者惊艳的金杖和金面具，就具有典型的西亚文明的色彩。而来自印度洋海域的大量贝壳的出现，表明三星堆文明在几千年前就与南亚地区展开了贸易往来。 三星堆作为中华民族灿烂的上古文明的重要组成部分，从古至今，都闪耀着炫丽的光彩。 —————————————————— 除了证明五千年前的长江流域拥有璀璨的文明， 三星堆文明对于我们研究中华文明的源头和发展有着重要意义。 中国是一个历史太悠久的国家，人口众多，地域辽阔，多少年来，有无数的文明在这片土地上生息繁衍，交流融合，斗争湮灭。在文字出现以前，我们对于那些历史，只能依靠口口相传的神话传说去想象。 三星堆文明，很可能和《山海经》里记载的一位失落的天神——帝俊有关。 帝俊是《山海经》里的第一天神。在《山海经》的世界里，他是日母羲和和月母常曦的丈夫，是十个太阳和十二个月亮的父亲，是大羿的上司，是白民，三身，黑齿等国家的祖先。 金荣权在《帝俊及其神系考略》一文中指出：“帝俊在中国古代神话中是一个谜一般的神性人物，他的事迹既不为正史所载，也不为诸子所传，只见于《山海经》之中，尤其集中反映在“大荒”、“海内”两经之中。究其神系渊源与脉略，显不属于炎帝世系，也不隶属于黄帝世系，是与炎、黄两大神系并存的第三神系 ”。 “关于帝俊在中国古代诸神中的地位，今天众说纷纭，然一般认为，帝俊当是上古时代东方部落的祖先神，这种看法是一致的，因为《山海经》记载的帝俊活动地及其子孙之国大多在东方”。 徐旭生说：“帝俊这个人物，在《山海经》里面，可以说是第一显赫的了。里面载他的事，多至十六（在《经》里面只有帝颛顼多至十七事，可是他与九嫔葬处一事三见，那只剩下十五事。此外黄帝十事，炎帝四事，帝喾三事，帝尧二事，帝舜九见八事，帝丹朱二事，帝江一事，帝鸿一事。其余的人没有帝称）”。通过 这十六项的帝俊故事可以看出，第一，他东西南北，无所不至；第二，古代重要的大发明，差不多全出于他的子孙；第三，包括姬姓、姜姓、姚姓在内许多氏族都是 由他分出；第四，太阳是他的儿子，月亮是他的女儿，在他之下有“人面、犬耳、兽身，珥两青蛇，名曰奢（she）比尸”的神人和“五采之鸟”的“下友””。 有学者认为，帝俊的信奉者，正是早期的东夷集团成员。 说到东夷，这是先秦时期我国最重要的三大集团（炎黄，东夷，三苗）之一，也是华夏族（汉族的前身）的族源之一。 东夷族人大部分居住在现今的山东，安徽，江苏等地区，是先秦时期分布在古河济之间及泰山以东以南的各部落与方国的统称。 大羿，夸父都是他们的成员。 五彩鸟是他们的图腾。 东夷人农耕技术先进，能歌善舞，崇拜太阳，会使用先进的太阳历，并且，以鸟为祖先。 然而，随着从西方来的黄帝部落与炎帝部落结成联盟，并在中原地区打败了东夷集团的蚩尤部落（这就是历史上有名的“涿鹿之战”）。东夷集团的族人部分迁徙到中华大地的东南西北，部分和炎黄部落融合，若干代后形成了汉族的祖先—————华夏族。 这个庞大集团的血脉和文化，直到今天都还在浸润着我们。 例如，我们中华民族广为人知的图腾，是龙凤呈祥。 龙来自炎黄部落联盟。 而凤凰的原型，正是东夷部落的天神————帝俊的使者，“五彩之鸟”。 根据《山海经大荒东经》记载：有五彩之鸟，相乡弃沙，惟帝俊下友，帝下两坛，彩鸟是司”。 东夷族人的迁徙路线其实直到今天并没有完全搞清楚。 但学界一直有种观点，《山海经》的作者中有古蜀国人。 根据《山海经》的记载，羲和和常羲是帝俊的妻子，十日和十二月是帝俊的儿子和女儿。 因此，我认为，三星堆的人民，用栖息十日的青铜神树证明，他们正是帝俊追随者的后裔。 —————————————————— 专家们现在很想证明三星堆和夏朝的关系。 但三星堆祭祀坑填埋的年代是商晚期。（但青铜器制造的年代呢？应该比填坑年代早得多） 有专家说，那些精巧的青铜器有很多既有三星堆特点，又有中原文化特点的东西。 比方说那个脑袋上顶着尊，手上行着礼的三星堆人跪像（现已经被鉴定为国宝级文物）。 大家都知道，尊这玩意儿，是中原文化的象征。 另外，这次还发掘出很多中原文化的精巧青铜器的粗糙模仿品。 所以你说，三星堆的青铜器，是外星人或者外国人造的吗？ ————————————————— 三星堆的奇特在于，它悄悄诞生于数千年前。默默无闻地辉煌，然后又凋落。 也许有人把它们写入了史书，也许没有，也许这史书后来毁于战火。 无论原因是什么，结果是现代的人们对这个文明毫无知觉。 可是，这个世界上，不为大众熟知的东西太多。失落的古文明，考古史上不要太多。 三星堆那群审美独特的古代先锋艺术家，只是其中之一，而已。 —————————————————— 三星堆太阳神树上的金乌，其实并不像乌鸦。 乌鸦的嘴巴又短又直。像匕首。 而不是在尖端有一个向下的弧度。（三星堆出土的鸟类嘴壳几乎都是这种形状） 有人认为，三星堆的太阳神树上停着的，不是九只乌鸦，而是九只鱼鹰。（可以找乌鸦和鱼鹰的嘴壳照片对比） 没错，就是古蜀王“鱼凫氏”名字里那种动物。鱼鹰就是鱼凫。 岷江流域的渔民，自古就有驯养鱼鹰捕鱼的习俗。 所以我认为，三星堆人并不是纯正的东夷人，而是东夷集团的遗民和古蜀国本地土著结合的后代。 ————————————————— 说到大羿这个家喻户晓的神话人物，其实在《山海经》里也是有记载的。 只不过，和其他典籍的记载不一样，《山海经》里的大羿，是帝俊的手下。 帝俊赐羿彤弓素矰，以扶下国，羿是始去恤下地之百艰。 —————《山海经 海内经 》 在《山海经》里，大羿不是人类，而是一位由天神帝俊派到人间救苦救难的神袛。 羿与凿齿战于寿华之野，羿射杀之。在昆仑墟东。羿持弓矢，凿齿持盾。一曰戈。”——《山海经 海外南经》 《庄子秋水》唐人成玄英疏引《山海经》中云：“羿射九日,落为沃焦.今本无。”可见大羿射日的传说原本记载在《山海经》中，后来因为某些原因没有保存下来。 前面提到，《山海经》中大羿的上司是帝俊。但在后世其他典籍里，大羿效命的对象变成了人类帝王尧。 例如西汉成书的《淮南子》关于英雄羿的记载： “逮至尧之时，十日并出，焦禾稼，杀草木，而民无所食。猰貐、凿齿、九婴、大风、封豨、修蛇皆为民害。尧乃使羿诛凿齿于畴华之野，杀九婴于凶水之上，缴大风于青邱之泽，上射十日，而下杀猰貐，断修蛇于洞庭，擒封豨于桑林。万民皆喜，置尧以为天子。” 《楚辞章句》曾言：“尧时十日并出，草木焦枯，尧命羿仰射十日，中其九日，日中九乌皆死，堕其羽翼，故留其一日也。” 另外，我们现在都知道，娥皇和女英是舜帝的妻子。 但在《山海经》里，娥皇是帝俊的妻子，也是三身国的祖先。 这种种自相矛盾的记载，考虑到帝俊从除了《山海经》以外的其他浩如烟海的典籍蒸发般的消失，无疑指向一个清晰的事实：我们的史书典籍，是经过后人篡改的。 来自 <a href="https://www.zhihu.com/question/486028503/answer/2551102404?utm_id=0">https://www.zhihu.com/question/486028503/answer/2551102404?utm_id&#x3D;0</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;三星堆的价值在我看来，是还原了我们漫长历史中被湮灭的一部分。 中国是四大文明古国之一，也是唯一延续至今的古文明。然而中华文明的神话故事有一个特点：没有特别有名的太阳神和月亮神。 人类社会经历过万物有灵的阶段，从多神教走向一神教，这是社会发展的必然过程。 早期，人类的饮食来源</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://blog.jyf.icu/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>对阿富汗局势的声明</title>
    <link href="https://blog.jyf.icu/2023/01/25/%E4%B8%AD%E8%80%8C%E5%85%AC%E5%91%8A2/"/>
    <id>https://blog.jyf.icu/2023/01/25/%E4%B8%AD%E8%80%8C%E5%85%AC%E5%91%8A2/</id>
    <published>2023-01-25T14:42:03.000Z</published>
    <updated>2024-01-01T12:05:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog.sam1314.com/wp-content/uploads/2023/01/image.png"></p><p>塔利班政权控制阿富汗大部分地区后，实行封闭的宗教管理，剥夺妇女儿童受教育的权利。我们对此感到诧异和愤怒，塔利班政权的决策是迂腐的，反动的，我们与阿富汗人民站在同一立场上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://blog.sam1314.com/wp-content/uploads/2023/01/image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;塔利班政权控制阿富汗大部分地区后，实行封闭的宗教管理，剥夺妇女儿童受教育的权利。我们对此感到诧异和愤怒，塔利班政</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://blog.jyf.icu/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>“Sam的博客”祝大家新春快乐</title>
    <link href="https://blog.jyf.icu/2023/01/21/2023%E6%98%A5%E8%8A%82%E5%BF%AB%E4%B9%90/"/>
    <id>https://blog.jyf.icu/2023/01/21/2023%E6%98%A5%E8%8A%82%E5%BF%AB%E4%B9%90/</id>
    <published>2023-01-21T14:03:36.000Z</published>
    <updated>2023-11-04T14:54:58.326Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2023年的中国春节，“Sam的博客”祝大家新年快乐！</p><p>我本来想写一个 “2022年年终总结报告”之类的，但我发现没有什么可写的。我认为2022年是似有许多但又无从下笔，但在随后的2023年将更加丰富多彩。</p><p>最后，<strong>祝大家新年快乐</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天是2023年的中国春节，“Sam的博客”祝大家新年快乐！&lt;/p&gt;
&lt;p&gt;我本来想写一个 “2022年年终总结报告”之类的，但我发现没有什么可写的。我认为2022年是似有许多但又无从下笔，但在随后的2023年将更加丰富多彩。&lt;/p&gt;
&lt;p&gt;最后，&lt;strong&gt;祝大家新年</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://blog.jyf.icu/categories/uncategorized/"/>
    
    
  </entry>
  
</feed>
